@{
    ViewData["Title"] = "Match";
    int i = 0;
}

<h1>Match</h1>

<p><b>@Model.Game.name</b></p>


@foreach(var account in Model.AccountList)
{
    int points = @Model.MatchList[i].Points;

    <p>@account.username</p>
    <p id="score" name="score">Score: @points</p>
    <input type="button" value="Add Point" class="btn btn-primary" onclick="increaseScore(@i)" />
    <input type="button" value="-" class="btn btn-light" onclick="decreaseScore(@i)" />

    i++;
    <br>
    <br>
    <br>
}

<label for="winner-select">Selecteer winnaar</label><br />
<select name="winner-select" id="winner-select">
    <option value="Automatisch">Hoogste score</option>
    @foreach (var account in Model.AccountList)
    {
        <option value="@account.account_ID">@account.username</option>
    }
</select>

<br />
<br />

<input type="button" value="Update" class="btn btn-outline-primary" onclick="updateMatchData(@Model.MatchList[0].Match_ID)"/>

@section scripts{
    <script>
        var scores = [];
        for (var j = 0; j < document.getElementsByName("score").length; j++) {
            scores.push(0);
        }

        function increaseScore(i) {
            var currentScore = parseInt(document.getElementsByName("score")[i].textContent.substring(7));
            scores[i] = currentScore + 1;
            document.getElementsByName("score")[i].textContent = "Score: " + scores[i];
        }

        function decreaseScore(i) {
            if (parseInt(document.getElementsByName("score")[i].textContent.substring(7)) != 0) {
                var currentScore = parseInt(document.getElementsByName("score")[i].textContent.substring(7));
                scores[i] = currentScore - 1;
                document.getElementsByName("score")[i].textContent = "Score: " + scores[i];
            }
        }

        function getWinner(){
            var winner;
            var winnerPoints;
            var mostPoints = -1;
            var scoreElements = document.getElementsByName("score");

            for (var i = 0; i < scoreElements.length; i++) {
                if (scoreElements[i].textContent.substring(7, 20) >= mostPoints) {
                    mostPoints = scoreElements[i].textContent.substring(7, 20);
                    winner = document.getElementById("winner-select")[i + 1].value
                    winnerPoints = scoreElements[i].textContent.substring(7, 20);
                }
            }
            return [winner, winnerPoints];
        }

        function checkForWinnerDupe(){
            var winner = getWinner()[0];
            var scoreElements = document.getElementsByName("score");
            var timesExceeded = 0;

            for (var i = 0; i < scoreElements.length; i++) {
                if (scoreElements[i].textContent.substring(7, 20) == getWinner()[1]) {
                    timesExceeded++;
                }
            }
            if (timesExceeded > 1) {
                return true
            } else {
                return false;
            }
        }

        function updateMatchData(matchID) {
            var pointsArray = [];
            var scoreElements = document.getElementsByName("score");

            for (var i = 0; i < scoreElements.length; i++) {
                pointsArray.push(scoreElements[i].textContent.substring(7, 20));
            }

            var winner = document.getElementById("winner-select").value;
            
            if(winner == "Automatisch"){
                if(checkForWinnerDupe()){
                    alert("Er zijn twee spelers met de hoogste score!")
                    winner = 0;
                } else {
                    winner = getWinner()[0];
                }
            }
            console.log(winner)
            if(winner != 0){
            points = pointsArray.join(',');            

            $.ajax({
                url: '/Main/updateMatchData',
                data: { Match_ID: matchID, points: points, winner: winner},
                type: 'GET',
                succes: alert("Wedstrijd ge-update!")
            });
            }
        }
    </script>
}